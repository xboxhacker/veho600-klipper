[mcu]
#serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0 # find your own... ssh in then run [ cd klipper ] then [ ls /dev/serial/by-id  ]
serial: /dev/mcu
#baud: 500000
restart_method: command

[mcu STM32F407]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_250050001151313430353237-if00


[mcu host]
serial: /tmp/klipper_host_mcu

###############################################################
# Resume failed print with a "start at layer" option
###############################################################

#[gcode_shell_command start_layer_resume]
#command: python3 /home/biqu/printer_data/config/START_AT_LAYER/start_at_layer_web.py --web
#timeout: 1000.0  #Server timeout to kill the server
#verbose: True

#[gcode_macro LAYER_RESUME_GUI]
#description: Start Layer Resume Web GUI
#gcode:
#    RESPOND MSG="Starting Layer Resume GUI..."
#    RESPOND MSG="Layer Resume GUI: http://veho.local:8081"
#    RESPOND MSG="Open this link to use the GUI. Shut down the GUI server when you're done."
#    RUN_SHELL_COMMAND CMD=start_layer_resume
   

[input_shaper]

[force_move] 
enable_force_move: true 

[display_status]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[include bdwidth.cfg]
[include bdsensor.cfg]
[include Filamentchange.cfg]
[include mainsail.cfg]
[include Macros.cfg]
[include tilt.cfg]
[include timeout.cfg]
[include screwtilt.cfg]
[include bed_screws.cfg]
[include homing.cfg]
#[include BL_Touch.cfg]
[include respond.cfg]
#[include accelerometer.cfg]
#[include lcd.cfg]
#[include shell_command.cfg]

[printer]
kinematics: cartesian
max_velocity: 2500
max_accel: 1500
max_z_velocity: 50 # stock
max_z_accel: 30 # stock
#max_z_velocity: 10 # non-stock ball screw
#max_z_accel: 10 # non-stock ball screw

[stepper_x]
step_pin: PE5 # a step_pin is a pin that sends a pulse to the stepper motor to move it one step.
dir_pin: !PF1 # dir_pin is short for direction pin, it controls the direction of the stepper motor.
enable_pin: !PF0 # the enable pin is used to enable/disable each stepper motor individually
microsteps: 16 # this is the amount of microsteps it takes for a nema 17 motor to do one full complete step.
rotation_distance: 60
endstop_pin: !PC15
position_endstop: -5
position_min: -5
position_max: 590 # for bed mesh
homing_speed: 200
homing_retract_dist: 10
second_homing_speed: 10.0

#[include stepperYStock.cfg] # stock veho stepper
[include stepperYDirRev.cfg] # non-stock direction reversed y stepper

[stepper_z]
step_pin: PF6
dir_pin: !PF4
enable_pin: !PF7
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 12
endstop_pin: probe:z_virtual_endstop
endstop_pin: !PF11
#position_endstop: 600
position_max: 600
position_min: -15
homing_speed: 30.0 # stock thread
#homing_speed: 10 # non-stock better for ball thread
homing_retract_dist: 5
second_homing_speed: 8.0

[stepper_z1]
step_pin: PA6 # a step_pin is a pin that sends a pulse to the stepper motor to move it one step.
dir_pin: !PF15 # dir_pin is short for direction pin, it controls the direction of the stepper motor.
enable_pin: !PA5 # the enable pin is used to enable/disable each stepper motor individually
microsteps: 16 # this is the amount of microsteps it takes for a nema 17 motor to do one full complete step.
full_steps_per_rotation: 200
rotation_distance: 12
#rotation_distance: 4 # non-stock ball thread
endstop_pin: !PC13
#position_endstop: 580

# the safe z home code block below is commented out as there is a custom homing.cfg file attached

# Not needed here for ref
# custom homing in place

#[safe_z_home]
#home_xy_position: 0,0
#speed: 200
#z_hop: 5
#z_hop_speed: 5

[extruder]
step_pin: PB1
dir_pin: PF13
enable_pin: !PF14
microsteps: 16
rotation_distance: 28.239   #28.180
gear_ratio: 50:17 #50:17 # BMG Clone ratio per klipper docs
nozzle_diameter: 1.2
filament_diameter: 1.750
heater_pin: PG7
sensor_type: PT1000
#pullup_resistor: 4700 # The resistance (in ohms) of the pullup attached to the sensor. The
# default is 4700 ohms.
sensor_pin: PC3
#control: pid
#pid_Kp: 20.72
#pid_Ki: 1.88
#pid_Kd: 57.18
min_temp: 0
max_temp: 300
max_extrude_only_distance: 400
max_extrude_cross_section: 50.0
min_extrude_temp: 180 # dangerous, but bowden loading is much easier without it

[heater_bed]
heater_pin: PE2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC2
min_temp: 0
max_temp: 150
#control: pid
#pid_Kp: 73.932
#pid_Ki: 1.521
#pid_Kd: 898.279

[heater_fan hotend_fan]
heater: extruder
heater_temp: 50.0
pin: PG9

[fan]
pin: PG0

[temperature_fan Case_Fan]
pin: host:gpio211
kick_start_time: 0.8
#shutdown_speed: 0
off_below: 0.1
max_power: 1.0
#fan_speed: 0.6
sensor_type: temperature_host
control: pid
min_temp: 0
max_temp: 85
#max_delta: 5.0
pid_kp: 1.0
pid_ki: 0.5
pid_kd: 2.0
min_speed: 0.1
max_speed: 0.6
target_temp: 38

[controller_fan drivers_fan]
#[fan]
pin: PD7

#[filament_switch_sensor filament_sensor]
#pause_on_runout: True
#runout_gcode:
# M25
#switch_pin: !PE6

#[output_pin beeper]
#pin: PA8

[bed_mesh]
speed: 120
probe_count: 5, 5
horizontal_move_z: 1
algorithm: bicubic
mesh_min : 130, 130
mesh_max : 450, 440
mesh_pps: 0
#fade_start: 5
#fade_end: 15
#fade_target: 0

#600mm Bed
#[bed_mesh]
#speed: 120
#probe_count: 8, 8
#horizontal_move_z: 10
#algorithm: bicubic
#mesh_min : 75, 75
#mesh_max : 525, 525
#mesh_pps: 0
#fade_start: 5
#fade_end: 15
#fade_target: 0


# for the stock probe
#[probe]
#x_offset: -38.5
#y_offset:  10
#pin: !PE3
#speed: 5
#samples: 2
#z_offset: 3.49

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True   ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 10.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 10.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 66.235
#*# pid_ki = 0.960
#*# pid_kd = 1142.555
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 37.384
#*# pid_ki = 6.923
#*# pid_kd = 50.468
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 44.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 30.0
#*#
#*# [stepper_z]
#*# position_endstop = 587.085
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.548750, -0.568750, -0.588750, -0.518750, -0.478750
#*# 	  -0.338750, -0.398750, -0.388750, -0.318750, -0.318750
#*# 	  -0.118750, -0.198750, -0.198750, -0.198750, -0.198750
#*# 	  0.121250, 0.061250, 0.011250, -0.028750, -0.138750
#*# 	  0.371250, 0.291250, 0.201250, 0.061250, -0.118750
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 0
#*# mesh_y_pps = 0
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 130.0
#*# max_x = 450.0
#*# min_y = 130.0
#*# max_y = 440.0
